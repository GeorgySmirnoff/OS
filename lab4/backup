#!/bin/bash

if [[ ! -d "$HOME/source" ]]; then
 echo "Derictory SOURCE does not exist!"
 exit 1
fi

if [[ ! -f "$HOME/backup-report" ]]; then
 touch $HOME/backup-report
fi


nowDate=$(date +"%Y-%m-%d")
lastBackupDate=$(ls $HOME/ | grep -E "^Backup-" | sort -n | tail -1 |sed "s/Backup-//")
lastBackup="$HOME/Backup-$lastBackupDate"
timeDiff=$(echo "($(date -d "$nowDate" +"%s") - $(date -d "lastBackupDate" +"%s"))/60/60/24" | bc)

#нет каталога с именем, соответствующим дате, отстоящей от текущей менее чем на 7 дней
if [[ -z "$lastBackupDate" ]] || [[ $timeDiff > 7 ]];then
	 mkdir "$HOME/Backup-${nowDate}"
	for obj in $(ls $HOME/source); do
    	cp "$HOME/source/$obj" "$HOME/Backup-$nowDate"
        done
#сведениями о создании нового каталога с резервными копиями с указанием его имени и даты  +список файлов
 flist=$(ls $HOME/source | sed "s/^/\t/")
 echo -e "Backup (${nowDate}) was created:\n${flist}" >> $HOME/backup-report
#если  есть действующий каталог созд меньше 7 дней
else
 changes=''
  for obj in $(ls $HOME/source); do
#если файл с таким именем есть
if [[ -f "$lastBackup/$obj" ]]; then
#размер сравнивается с размером одноименного файла в действующем каталоге резервного копирования
     srcSize=$(md5sum "$HOME/source/${obj}" | cut -d ' ' -f 1) 
     bakSize=$(md5sum "${lastBackup}/${obj}" | cut -d ' ' -f 1) 
     if ! [ "$srcSize" = "$bakSize" ] ; then sizeDiff=1
     else sizeDiff=0
     fi
#Если размеры отличаются, то файл копируется c автоматическим созданием
     if ! [ $sizeDiff = "0" ]; then 
	mv -v "$lastBackup/$obj" "$lastBackup/$obj.$nowDate"
        cp -v "$HOME/source/$obj" $lastBackup 
	changes="${changes}\n\tFile $obj updated. Previous version: $obj.$nowDate."
     fi
else
 cp -v "$HOME/source/$obj" $lastBackup 
 changes="${changes}\n\tFile $obj copied."
fi
  done

 changes=$(echo $changes | sed 's/^\\n//')
  if [[ ! -z "$changes" ]]; then
    echo -e "Backup (${lastBackupDate}) updated:\n${changes}" >>$HOME/backup-report
  fi
fi
